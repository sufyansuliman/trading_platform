'use strict';
var _a = require('lodash'), omitBy = _a.omitBy, isNil = _a.isNil;
function getAll(_a) {
    var _b = _a === void 0 ? {} : _a, status = _b.status, until = _b.until, after = _b.after, limit = _b.limit, direction = _b.direction, nested = _b.nested;
    var queryParams = omitBy({
        status: status,
        until: until,
        after: after,
        limit: limit,
        direction: direction,
        nested: nested
    }, isNil);
    return this.httpRequest('/orders', queryParams);
}
function getOne(id) {
    return this.httpRequest('/orders/' + id);
}
function getByClientOrderId(clientOrderId) {
    var queryParams = { client_order_id: clientOrderId };
    return this.httpRequest('/orders:by_client_order_id', queryParams);
}
function post(order) {
    return this.httpRequest('/orders', null, order, 'POST');
}
function cancel(id) {
    return this.httpRequest('/orders/' + id, null, null, 'DELETE');
}
function cancelAll() {
    return this.httpRequest('/orders', null, null, 'DELETE');
}
function patchOrder(id, newOrder) {
    return this.httpRequest("/orders/" + id, null, newOrder, 'PATCH');
}
module.exports = {
    getAll: getAll,
    getOne: getOne,
    getByClientOrderId: getByClientOrderId,
    post: post,
    patchOrder: patchOrder,
    cancel: cancel,
    cancelAll: cancelAll,
};
