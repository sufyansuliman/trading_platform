'use strict';
var request = require('request-promise');
var joinUrl = require('urljoin');
function httpRequest(endpoint, queryParams, body, method) {
    var _a = this.configuration, baseUrl = _a.baseUrl, keyId = _a.keyId, secretKey = _a.secretKey, apiVersion = _a.apiVersion, oauth = _a.oauth;
    return request({
        method: method || 'GET',
        uri: joinUrl(baseUrl, apiVersion, endpoint),
        qs: queryParams || {},
        headers: oauth !== '' ? {
            'content-type': method !== 'DELETE' ? 'application/json' : undefined,
            'Authorization': "Bearer " + oauth,
        } : {
            'content-type': method !== 'DELETE' ? 'application/json' : undefined,
            'APCA-API-KEY-ID': keyId,
            'APCA-API-SECRET-KEY': secretKey,
        },
        body: body || undefined,
        json: true,
    });
}
function dataHttpRequest(endpoint, queryParams, body, method) {
    var _a = this.configuration, dataBaseUrl = _a.dataBaseUrl, keyId = _a.keyId, secretKey = _a.secretKey, oauth = _a.oauth;
    return request({
        method: method || 'GET',
        uri: joinUrl(dataBaseUrl, 'v1', endpoint),
        qs: queryParams || {},
        headers: oauth !== '' ? {
            'content-type': method !== 'DELETE' ? 'application/json' : undefined,
            'Authorization': "Bearer " + oauth,
        } : {
            'content-type': method !== 'DELETE' ? 'application/json' : undefined,
            'APCA-API-KEY-ID': keyId,
            'APCA-API-SECRET-KEY': secretKey,
        },
        body: body || undefined,
        json: true,
    });
}
function polygonHttpRequest(endpoint, queryParams, body, method, apiVersion) {
    if (apiVersion === void 0) { apiVersion = 'v1'; }
    var _a = this.configuration, baseUrl = _a.baseUrl, keyId = _a.keyId, polygonBaseUrl = _a.polygonBaseUrl;
    queryParams = queryParams || {};
    queryParams['apiKey'] = keyId;
    if (baseUrl.indexOf('staging') > -1) {
        queryParams['staging'] = true;
    }
    return request({
        method: method || 'GET',
        uri: joinUrl(polygonBaseUrl, apiVersion, endpoint),
        qs: queryParams || {},
        headers: {
            'content-type': 'application/json',
        },
        body: body || undefined,
        json: true,
    });
}
module.exports = {
    httpRequest: httpRequest,
    dataHttpRequest: dataHttpRequest,
    polygonHttpRequest: polygonHttpRequest,
};
